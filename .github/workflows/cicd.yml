name: CICD
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & tag the image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}
        run: |
          # Build docker container
          # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          echo "Built image..."
          echo $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          echo '${{ toJSON(github.event) }}'

      - name: Debug CICD
        uses: hmarr/debug-action@v2
      # - name: Push the image
      #   if: github.ref == 'refs/heads/master'
      #   id: push-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ github.event.repository.name }}
      #   run: |
      #     # Push image to ECR
      #     echo "Pushing image to ECR..."
      #     docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
      #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA"